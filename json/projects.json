[
	{
		"id": "ea-captech",
		"name": "Electronic Arts: Software Engineer - CAPTECH Team",
		"company": "Electronic Arts",
		"type": "Full-time Employee",
		"startDate": "Apr 2022",
		"endDate": "Jun 2023",
		"imagePrincipal": "projects/ea.png",
		"activeItem": "in",
		"descriptionHTML": "<p>Working, remotely, as a Full-stack Software Engineer/SRE.</p><p>Our team provided a framework used throughout multiple games. The framework abstract Kubernetes details and creates an easy way for clusters (AWS or GCP, as it's cloud agnostic) to have all services running properly. It includes both the Kubernetes infrastructure created (using Helm charts for templating & dependencies) as well as some of the common game services needed by multiple games (like anti-cheat services, for example).</p><p>Working as part of the team that maintains such framework, I added new features and supported existing ones. Some example of languages and technologies used are: Helm Charts, ArgoCD, Istio, Keycloak, Go Lang, Java, Kotlin, Typescript, and Python.</p>"
	},
	{
		"id": "daitan-group-ojo-labs",
		"name": "OJO Labs: Full Stack Engineer - Agent Team",
		"company": "Daitan Group",
		"type": "Full-time Employee",
		"startDate": "Nov 2021",
		"endDate": "Mar 2022",
		"imagePrincipal": "projects/ojo.png",
		"descriptionHTML": "<p>Working for OJO Labs as an Encora contractor (Encora being Daitan's parent company) as a Fullstack Engineer.</p><p>OJO Labs helps connect real-estate agents with potential house buyers/sellers using machine learning analysis based on customer preferences, as well as providing automated processes that connect both interested parties when sealing a house deal.</p><p>Currently developing software using Kotlin for Backend systems that manage orchestration and other parts of agent matching (listening and sending RabbitMQ events).</p><p>Also helping development on the Agent Tools system (built in ReactJS), which helps Agents to interact with OJO lead offer processes by setting their preferences for customers and accepting lead offers through the Agent Tools UI.</p>"
	},
	{
		"id": "daitan-group-microservice-framework",
		"name": "Symphony: Software Developer - Microservice Infrastructure & Multitenant Monolith",
		"company": "Daitan Group",
		"type": "Full-time Employee",
		"startDate": "Mar 2020",
		"endDate": "Nov 2021",
		"imagePrincipal": "projects/daitan.png",
		"descriptionHTML": "<p>Kept collaborating with Symphony (<a href='https://symphony.com/'>https://symphony.com</a>) as a contractor from Daitan Group.</p><p>Worked on a team created to define patterns of micro-service development throughout Symphony. I work together with their developers on a team which is responsible for libraries, tooling and automation around micro-services development within the company, applying patterns and default configurations in a way that re-usage of those settings within micro-services is easily done and maintainable.</p><p>We created a few initiatives in the team: </p><ul><li>A spring-boot-starter framework based off the one created by Spring-Boot maintainers, which provides sub-modules for the most common used implementations with Symphony's context added to it.</li><li>The microservice-generator, which configures a new microservice by triggering a script execution that has repository generation/configuration on Github, boilerplate code and CICD automatically configured.</li><li>A reference music-store micro-service, which serves as an example of how to build new microservices within the company, showing examples of how multiple different kind of processes could be developed.</li><li>A configuration-service microservice using our developed frameworks and scripts. This service is now used as the configuration values source within Symphony.</li></ul><p>Finally, worked for 4 months on a team with the goal of transforming the big single-tenant monolith system Symphony had into a multi-tenant one, having big savings on the costs with infrastructure, debugging and monitoring.</p>"
	},
	{
		"id": "daitan-group-lead-platform",
		"name": "Symphony: Tech Lead - Platform Team",
		"company": "Daitan Group",
		"type": "Full-time Employee",
		"startDate": "Jun 2016",
		"endDate": "Mar 2020",
		"imagePrincipal": "projects/daitan.png",
		"descriptionHTML": "<p>Worked on the new site of Daitan Group in Victoria, British Columbia, Canada.</p><p>Worked as a contractor for Symphony, which is a major communication company located on California/US.</p><p>The project I worked on consists of a communication system that is focused on security and end-to-end encryption. It is built on Spring Framework and ReactJS, and it uses a Microservice-based infrastructure, with components deployed on both GCP and AWS cloud platforms.</p><p>I worked mainly as a Software Developer, with my team being focused on constructing Public APIs that allows apps and other services to communicate with our system. I have worked with multiple technologies, helping the team build tools that make the job for App Developers easier, as well as developing integration-tests that assure those Public APIs, and the App infrastructure are working as expected.</p><p>After working a while with the team, I was assigned the Tech Lead role, being responsible for providing technical leadership on our Public API team. Participating in architectural discussions of the applications our team is involved, discussing and defining patterns to follow and technologies to use. Also providing hands-on knowledge on the application components, and helping everyone understand what needs to be done in order to achieve our team's goals.</p>"
	},
	{
		"id": "daitan-group-test",
		"name": "Daitan Group: VOIP Testing",
		"company": "Daitan Group",
		"type": "Full-time Employee",
		"startDate": "Jan 2016",
		"endDate": "Jun 2016",
		"imagePrincipal": "projects/daitan-old.png",
		"descriptionHTML": "<p>Worked with a client that is a major provider for network equipments around the globe.</p><p>Our team responsibilities were mainly test VOIP functionalities of the Optical Network Terminal (ONT) equipments that our client was releasing, assuring that the functionalities on the ONT embedded software were working as expected.</p><p>I worked on testing ONTs, verifying VOIP interactions between the equipments, following a Test plan, and looking at all the network packets and their specific info during a call. Protocols being used and tested include SIP, MGCP, and H.248.</p>"
	},
	{
		"id": "daitan-group-internship",
		"name": "Daitan Group: Web Development Internship",
		"company": "Daitan Group",
		"type": "UX Internship",
		"startDate": "Jul 2015",
		"endDate": "Jan 2016",
		"imagePrincipal": "projects/daitan-old.png",
		"descriptionHTML": "<p>Daitan is an outsourcing company with base of operations in Campinas, São Paulo, Brazil that provides software development work hours from their employees their clients, working mainly as a 3rd party contractor. Daitan prides themselves of being strict on who they hire, being recognized by their clients as one of their best contractors due to Daitan's developers having high quality work done for them.</p><p>Our client was a worldwide video and audio conference specialized company that is the leader of a significant part of the European audiovisual conference market.</p><p>The team I was a part of developed and maintained service consumer’s unique websites, where each website had a different subdomain for each one of the company’s clients, with informations on how to connect on the multiple conference systems integrated within that specific client subscribed plan.</p><p>It was a 6-month internship where I worked fixing bugs and helped on the development of those client websites.</p>"
	},
	{
		"id": "sms-access",
		"name": "Telaeris: SMS-Access",
		"company": "Telaeris",
		"type": "Project (Internship)",
		"startDate": "Jun 2014",
		"endDate": "Dec 2014",
		"imagePrincipal": "projects/sms.png",
		"descriptionHTML": "<p>Tealeris Inc. is a company located on San Diego, California that creates and develop the code for embedded systems solutions focused mostly on mobile access control.</p><p>Along with many other embedded systems built by the company, they created XPressFreedom, which consists of a board that allows gate authentication through RFID cards.</p><p>My main goal while working there was the conception of the SMS-Access system, which is an alternative authentication method for gates that use the XPressFreedom infrastructure.</p><p>The SMS-Access, along with an embedded system - used for gate authentication through ID cards - called XPressFreedom (also provided by Telaeris), allows users to use their cellphone to access electronic gates, providing them an alternative way to enter those gates when they lost, or forgot their card.</p><p>The system also has an web-administration interface that allows admins to change user's and gate's data, including them to the database built, and allowing a more abroad control of the whole system. Permissions to gates are also controlled in the SMS-Access web-administration system, saving processing time inside the XPressFreedom board that controls a gate itself. </p><p>It was developed using ASP.NET MVC Framework, SQL Server Database, VB.NET, and the Twilio API for SMS messaging between the web system and users. The data security was considered, so computer security techniques were used to prevent network atacking (man-in-the-middle being the main one): The first method was to use two authentication factors at the time the user tries to access the system, so the user must has his smartphone and his password from the system for authentication purposes; the second method was to use a shared key between the system and the user, requesting that the user send it back with his password for the system.</p><p>The whole processing of sending access request to SMS-Access is the following: <ol><li>User lost his card.</li><li>He sees a warning on the wall with one gate number from the system written on it, and saying that he can use SMS-Access to get into some gate needed.</li><li>He sends a text with the number of the gate to the SMS-Access phone number.</li><li>Twilio gets the message send, and send it to SMS-Access.</li><li>System processes the request, and see if user who made it has permission to the gate specified.</li><li>If it has permission, system sends sharedkey to user, requesting the password and shared key from it.</li><li>User sends shared key and password.</li><li>System verifies if everything is ok, and if it is, open the gate, and send the message \"Access granted!\" back.</li></ol><p>Below are some advantages of the SMS-Access system:</p><ul><li>Get employees faster access to secure spaces from their phone.</li><li>Print new employee IDs/badges only when you really need to.</li><li>Save money and reduce security staff having to address access issues.</li><li>Use SMS as an alternative to securely authenticate employees.</li><li>Easily monitor employee entries and exits from the admin panel.</li></ul><p>Managing security with employees entering and exiting secure spaces is a great challenge and one that security professionals take on with pride everyday. But assisting employees who lost, misplaced, or forgot their IDs/badges is not and staffing the security office just to print IDs/badges is a waste. SMS-Access saves time and money, giving employees an alternative way to authenticate themselves using their phone when their ID/badge is not available. SMS Access opens doors to secure spaces through SMS messages getting employees in and back to work fast without directly involving security staff.</p>"
	},
	{
		"id": "ufscar",
		"name": "UFSCar: Human Resources Management System",
		"company": "Federal University of São Carlos (UFSCar)",
		"type": "Software Development Internship",
		"startDate": "Jan 2012",
		"endDate": "Jan 2013",
		"imagePrincipal": "projects/ufscarRH.png",
		"descriptionHTML": "<p>Federal University of São Carlos (UFSCar) is a public federal university of Brazil. It also is where I studied to get my Computer Science BSc. degree.</p><p>My team worked on fixing bugs and giving new features for multiple systems inside the university.</p><p>I’ve developed part of the human resources system, and also the new academic system of the university, fixing bugs and developing new missing features on both projects.</p><p>We used as technologies for development the language Java, with their framework Hibernate for data-persisting, and JSF for front-end handling.</p>"
	},
	{
		"id": "digicomm",
		"name": "Digicomm: ERP & CRM Software",
		"company": "Digicomm",
		"type": "Full-time Employee",
		"startDate": "Nov 2010",
		"endDate": "Mar 2011",
		"imagePrincipal": "projects/digi.png",
		"descriptionHTML": "<p>Digicomm was a software development consulting company that provided software development for e-commerce stores of our major client from China.</p><p>My team’s project consisted on building and maintaining the ERP (Administrative) and CRM (Support) systems that were used by all stores that our client had. Both systems were built using PHP 5, and there was an initiative to create a new system for both purposes by scratch, using Zend Framework (a PHP Framework) and ExtJS (a Javascript library for frontend rendering) for its development.</p><p>My main attributions were developing new PHP modules to the ERP and CRM systems, keep the other modules functioning normally by fixing bugs, and making sure we had error-prevention measurements.</p><p>I also started to develop the new ERP/CRM systems, learning how to properly use Zend Framework structure, and making sure the system had an easier to use interface after using ExtJS for its frontend as well.</p>"
	},
	{
		"id": "formedical",
		"name": "FOR MEDICAL: Management System",
		"company": "FOR MEDICAL",
		"type": "Full-time Employee",
		"startDate": "Jan 2010",
		"endDate": "Nov 2010",
		"imagePrincipal": "projects/formedical.png",
		"descriptionHTML": "<p>Alpphoria was a web design focused company that provided Software Development services for another company called For Medical; with the second one focused on building medical equipments for use on hospitals and health centers.</p><p>Our team focused mainly on fixing bugs and developing new features for the administrative system (built on PHP) For Medical used. The system had structure to generate invoices, to control work orders (for support of medical equipments), to control the inventory of equipments and machines, and so on.</p><p>We also helped For Medical providing Support services for both the administrative system and hardware/network issues they had on their site.</p><p>I’ve work at start just testing PHP functionalities created by the other developers, trying to find bugs and filing them when found. After a couple of months I’ve started developing new functions for the system, as well as providing support for our client, fixing issues that happened on the system on production, as well as debugging the issue, finding the root cause and fixing it on the code.</p>"
	}
]